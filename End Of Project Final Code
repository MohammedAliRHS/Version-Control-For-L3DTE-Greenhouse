#define sensorPower 6   // Define the pin for sensor power
#define sensorPin A6    // Define the analog pin for soil moisture sensor

#include "dht.h"         // Include the DHT library for temperature and humidity sensor
#define dht_apin A1     // Define the analog pin for DHT sensor
dht DHT;                // Create a DHT object

#include <LiquidCrystal_I2C.h>  // Include the library for the I2C LCD display
LiquidCrystal_I2C lcd(0x27, 16, 2); // Create an LCD object with I2C address 0x27

const int BUTTON_ONE = 2;        // Define the button pin
const int WATER_PUMP_RELAY = 5;  // Define the water pump relay pin
const int FAN_RELAY = 3;         // Define the fan relay pin
const int HEATER_RELAY = 4;      // Define the heater relay pin
int screenState;                  // Variable to track the LCD screen state
int moisturePercentage;           // Variable to store soil moisture percentage
int temperature;                  // Variable to store temperature
int humidity;                     // Variable to store humidity

void setup() {
  pinMode(sensorPower, OUTPUT);   // Set sensor power pin as OUTPUT
  digitalWrite(sensorPower, LOW); // Turn off sensor power

  pinMode(WATER_PUMP_RELAY, OUTPUT); // Set water pump relay pin as OUTPUT
  digitalWrite(WATER_PUMP_RELAY, LOW); // Turn off water pump relay

  pinMode(FAN_RELAY, OUTPUT);     // Set fan relay pin as OUTPUT
  digitalWrite(FAN_RELAY, LOW); // Turn off fan relay

  pinMode(HEATER_RELAY, OUTPUT);  // Set heater relay pin as OUTPUT
  digitalWrite(HEATER_RELAY, LOW); // Turn off heater relay

  pinMode(BUTTON_ONE, INPUT_PULLUP); // Set button pin as INPUT_PULLUP to enable the internal pull-up resistor

  attachInterrupt(digitalPinToInterrupt(BUTTON_ONE), LCD, RISING); // Attach an interrupt to the button pin

  Serial.begin(9600); // Start serial communication at 9600 baud

  lcd.init(); // Initialize the LCD display
  lcd.clear(); // Clear the LCD display

  lcd.setCursor(9, 0); // Set the cursor position on the LCD
  lcd.print("SM=");    // Display "SM=" on the LCD

  lcd.setCursor(3, 1); // Set the cursor position on the LCD
  lcd.print("Humid="); // Display "Humid=" on the LCD

  lcd.setCursor(0, 0); // Set the cursor position on the LCD
  lcd.print("Temp=");  // Display "Temp=" on the LCD
}

void loop() {
  moisturePercentage = (readSensor() / 10); // Read soil moisture and calculate percentage
  lcd.setCursor(12, 0); // Set the cursor position on the LCD
  lcd.print(moisturePercentage); // Display soil moisture percentage on the LCD
  lcd.print("% "); // Display "%" on the LCD

  Serial.print("Soil Moisture: "); // Print debug information
  Serial.print(moisturePercentage);    // Print soil moisture reading
  Serial.print("% ");              // Print "%"
  if (readSensor() > 950) { // Check soil moisture level
    digitalWrite(WATER_PUMP_RELAY, HIGH); // Turn on water pump relay
  } else {
    digitalWrite(WATER_PUMP_RELAY, LOW); // Turn off water pump relay
  }

  DHT.read11(dht_apin); // Read temperature and humidity from DHT sensor

  temperature = (DHT.temperature); // Read temperature and store it
  humidity = (DHT.humidity);       // Read humidity and store it

  lcd.setCursor(9, 1); // Set the cursor position on the LCD
  lcd.print(humidity); // Display humidity on the LCD
  lcd.print("%");      // Display "%" on the LCD

  Serial.print("Current humidity = "); // Print debug information
  Serial.print(humidity);         // Print humidity
  Serial.print("%  ");                // Print "%"

  lcd.setCursor(5, 0); // Set the cursor position on the LCD
  lcd.print(temperature); // Display temperature on the LCD
  lcd.print("C ");        // Display "C" on the LCD

  Serial.print("Temperature = "); // Print debug information
  Serial.print(temperature); // Print temperature
  Serial.println("C  ");          // Print "C"

  if (DHT.temperature > 25) { // Check temperature
    digitalWrite(FAN_RELAY, HIGH); // Turn on fan relay
  } else {
    digitalWrite(FAN_RELAY, LOW); // Turn off fan relay
  }

  if (DHT.temperature < 21) { // Check temperature
    digitalWrite(HEATER_RELAY, HIGH); // Turn on heater relay
  } else {
    digitalWrite(HEATER_RELAY, LOW); // Turn off heater relay
  }

  if (BUTTONPRESSED()) { // Check if the button is pressed
    lcd.display(); // Turn on the LCD display
    lcd.backlight(); // Turn on the LCD backlight
    delay(10000); // Wait for 10 seconds
  } else {
    lcd.noDisplay(); // Turn off the LCD display
    lcd.noBacklight(); // Turn off the LCD backlight
  }
}

bool BUTTONPRESSED() {
  int buttonState = digitalRead(BUTTON_ONE); // Read the button state
  if (buttonState == 0) { // Check if the button is pressed (LOW)
    return true; // Return true if the button is pressed
  } else {
    return false; // Return false if the button is not pressed (HIGH)
  }
}

int readSensor() {
  digitalWrite(sensorPower, HIGH); // Turn on sensor power
  int val = analogRead(sensorPin); // Read the analog value from the soil moisture sensor
  digitalWrite(sensorPower, LOW); // Turn off sensor power
  return val; // Return the sensor reading
}

void LCD() {
  screenState = !screenState; // Toggle the screenState variable
}
